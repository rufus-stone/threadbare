name: 'Build and Run'

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - {name: ubuntu-gcc-10, os: ubuntu-latest, build_type: Release, cc: gcc-10, cxx: g++-10}
          - {name: ubuntu-clang-9, os: ubuntu-latest, build_type: Release, cc: clang-9, cxx: clang++-9}
          - {name: windows-latest, os: windows-latest, build_type: Release, cc: cl, cxx: cl}
      fail-fast: true

    steps:
    - uses: actions/checkout@v2

    - name: Install Conan
      env:
        CC: ${{matrix.config.cc}}
        CXX: ${{matrix.config.cxx}}
      run: pip install conan

    - name: Update PATH for linux runners
      # Pip installs Conan to a dir that is not in PATH on the Linux runners, for some reason
      if: ${{matrix.config.os == 'ubuntu-latest'}}
      run: echo "/home/runner/.local/bin" >> $GITHUB_PATH

    - name: Create Build Environment
      env:
        CC: ${{matrix.config.cc}}
        CXX: ${{matrix.config.cxx}}
      run: cmake -S . -B ${{runner.workspace}}/build  -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}}

    - name: Build
      working-directory: ${{runner.workspace}}
      shell: bash
      run: cmake --build build --config ${{matrix.config.build_type}} --target threadbare

    - name: Run on Linux
      if: ${{matrix.config.os == 'ubuntu-latest'}}
      working-directory: ${{runner.workspace}}
      shell: bash
      run: ${{runner.workspace}}/build/threadbare

    - name: Run on Windows
      if: ${{matrix.config.os == 'windows-latest'}}
      working-directory: ${{runner.workspace}}
      run: ${{runner.workspace}}\\build\\Release\\threadbare.exe
